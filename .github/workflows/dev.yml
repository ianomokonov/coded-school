name: Deploy DEV

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.11.0] #версия node.js на которой разарабатывался проект
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # Setup keyy
      - run: set -eu
      - run: mkdir "$HOME/.ssh"
      - run: echo "${{ secrets.secret_key }}" > "$HOME/.ssh/secret_key" # secret_key - название секрета
      - run: echo "${{ secrets.dev_env }}" > "./server/.env" # подстановка окружения
      - run: chmod 600 "$HOME/.ssh/secret_key"
      - run: echo -e "Host dev\n\tUser nomokoiw\n\tHostname nomokoiw.beget.tech\n\tIdentityFile $HOME/.ssh/secret_key\n\tStrictHostKeyChecking No" > "$HOME/.ssh/config"
      
      - name: Cache server node modules
        id: cache-npm-server
        uses: actions/cache@v3
        env:
          cache-name: cache-server-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: "/home/runner/work/coded-school/coded-school/server/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/server/package-lock.json') }}

      - name: Cache client node modules
        id: cache-npm-client
        uses: actions/cache@v3
        env:
          cache-name: cache-client-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: "/home/runner/work/coded-school/coded-school/client/node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/client/package-lock.json') }}

      - name: Install server dependencies
        if: steps.cache-npm-server.outputs.cache-hit != 'true'
        run: cd ./server && npm ci

      - name: Install cleint dependencies
        if: steps.cache-npm-client.outputs.cache-hit != 'true'
        run: cd ./client && npm ci

      - run: cd ./server && ls
      - run: cd ./server && npm run build
      - run: cd ./client && npm run build

      - run: cd server/dist && rsync -e "ssh -i $HOME/.ssh/secret_key -o StrictHostKeyChecking=no" --archive --compress . nomokoiw@nomokoiw.beget.tech:/home/n/nomokoiw/dev.codedschool.ru/server # полный путь до папки, куда нужно скопировать файлы
      - run: cd client/dist/coded-school/browser && rsync -e "ssh -i $HOME/.ssh/secret_key -o StrictHostKeyChecking=no" --archive --compress --delete . nomokoiw@nomokoiw.beget.tech:/home/n/nomokoiw/dev.codedschool.ru/public_html # полный путь до папки, куда нужно скопировать файлы
      - run: cd client/htaccess && rsync -e "ssh -i $HOME/.ssh/secret_key -o StrictHostKeyChecking=no" --archive --compress . nomokoiw@nomokoiw.beget.tech:/home/n/nomokoiw/dev.codedschool.ru/public_html # полный путь до папки, куда нужно скопировать файлы

      - name: Copy server dependences
        if: steps.cache-npm-server.cache-hit != 'true'
        run: cd server/node_modules && rsync -e "ssh -i $HOME/.ssh/secret_key -o StrictHostKeyChecking=no" --archive --compress --delete . nomokoiw@nomokoiw.beget.tech:/home/n/nomokoiw/dev.codedschool.ru/server/node_modules

      - run: ssh dev "touch ~/dev.codedschool.ru/server/tmp/restart.txt"
